<UserControl x:Class="RGU.DistributedSystems.Labs.WPF.View.UserControls.CompilerCommandMenu"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:converters="clr-namespace:RGU.DistributedSystems.Labs.WPF.Converter"
             xmlns:system="clr-namespace:System;assembly=System.Runtime"
             xmlns:nestedMultiBinding="clr-namespace:RGU.DistributedSystems.Labs.WPF.MVVM.NestedMultiBinding;assembly=RGU.DistributedSystems.Labs.WPF.MVVM"
             xmlns:viewControls="clr-namespace:RGU.DistributedSystems.Labs.WPF.View.UserControls"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
    
    <UserControl.Resources>
        
        <ResourceDictionary>
            
            <!-- #region DataGridStyle -->
            
            <Style x:Key="DataGridRowStyle" TargetType="DataGridRow">
                <Setter Property="Background" Value="Transparent"></Setter>
            </Style>
            <Style x:Key="DataGridColumnHeaderStyle" TargetType="DataGridColumnHeader">
                <Setter Property="Background" Value="#F2F2F2"></Setter>
                <Setter Property="BorderBrush" Value="#E4E3E3"></Setter>
                <Setter Property="Padding" Value="0,15"></Setter>
                <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
                <Setter Property="BorderThickness" Value="0,1,1,1"></Setter>
                <Setter Property="FontWeight" Value="Bold"></Setter>
                <Setter Property="FontFamily" Value="Roboto"></Setter>
            </Style>
            <Style x:Key="LeftDataGridColumnHeaderStyle" TargetType="DataGridColumnHeader" BasedOn="{StaticResource DataGridColumnHeaderStyle}">
                <Setter Property="BorderThickness" Value="1"></Setter>
            </Style>
            <Style x:Key="DataGridCellStyle" TargetType="DataGridCell">
                <Style.Setters>
                    <Setter Property="Background" Value="White"></Setter>
                    <Setter Property="FontFamily" Value="Roboto"></Setter>
                    <Setter Property="Foreground" Value="#3A3A3A"></Setter>
                    <Setter Property="BorderThickness" Value="0,1,1,1"></Setter>
                    <Setter Property="BorderBrush" Value="#E9E9E7"></Setter>
                    <Setter Property="FocusVisualStyle" Value="{x:Null}"></Setter>
                    <Setter Property="Margin" Value="0,15,0,0" /> 
                    <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
                    <Setter Property="Padding" Value="0 5"></Setter>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type DataGridCell}">
                                <Border Background="{TemplateBinding Background}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        SnapsToDevicePixels="True"
                                        Padding="{TemplateBinding Padding}">
                                    <ContentPresenter 
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                        
                                    </ContentPresenter>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style.Setters>
                <Style.Triggers>
                    <!-- Проверяем наличие ошибки в валидации -->
                    <DataTrigger Binding="{Binding (Validation.HasError), RelativeSource={RelativeSource Self}}" Value="True">
                        <Setter Property="BorderBrush" Value="Transparent" />
                        <Setter Property="BorderThickness" Value="0" />
                    </DataTrigger>
                   
                </Style.Triggers>
            </Style>
            <Style x:Key="LeftDataGridCellStyle" TargetType="DataGridCell" 
                   BasedOn="{StaticResource DataGridCellStyle}">
                <Setter Property="BorderThickness" Value="1"></Setter>
            </Style>
            <Style x:Key="DataGridStyle" TargetType="DataGrid">
                <Setter Property="Background" Value="Transparent"></Setter>
                <Setter Property="Foreground" Value="#3A3A3A"></Setter>
                <Setter Property="BorderThickness" Value="0"></Setter>
                <Setter Property="BorderBrush" Value="#E9E9E7"></Setter>
                <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected"></Setter>
                <Setter Property="ScrollViewer.CanContentScroll" Value="True"></Setter>
                <Setter Property="ScrollViewer.PanningMode" Value="Both"></Setter>
                <Setter Property="Stylus.IsFlicksEnabled" Value="True"></Setter>
                <Setter Property="GridLinesVisibility" Value="None"></Setter>
                <Setter Property="CanUserResizeColumns" Value="False"></Setter>
                <Setter Property="AutoGenerateColumns" Value="False"></Setter>
                <Setter Property="CanUserResizeRows" Value="False"></Setter>
                <Setter Property="HeadersVisibility" Value="Column"></Setter>
                <Setter Property="SelectionMode" Value="Single"></Setter>
                <Setter Property="SelectionUnit" Value="FullRow"></Setter>
                <Setter Property="CanUserAddRows" Value="False"></Setter>
                <Setter Property="CanUserDeleteRows" Value="False"></Setter>
                <Setter Property="CanUserReorderColumns" Value="False"></Setter>
                <Setter Property="ColumnWidth" Value="*"></Setter>
            </Style>
            
            <!-- #endregion -->
            
            <!-- #region DataGridComponentStyle -->
            
             <ControlTemplate x:Key="ComboBoxCustomToggleButton" TargetType="{x:Type ToggleButton}">
                 <Grid>
                     <Grid.ColumnDefinitions>
                         <ColumnDefinition/>
                         <ColumnDefinition Width="20"></ColumnDefinition>
                     </Grid.ColumnDefinitions>
                     <Border    
                         Name="Border"
                                Grid.ColumnSpan="2"
                                SnapsToDevicePixels="True"
                                 />
                     <Border Grid.Column="1">
                         <Path Name="Arrow"
                               Fill="#FFD9D9D9" 
                               HorizontalAlignment="Center"
                               Width="10"
                               Height="10"
                               Stretch="Fill"
                               VerticalAlignment="Center"
                               Data="M18,15z M0,0z M9,15L0.339745,0 17.6603,0 9,15z" />
                     </Border>
                    
                 </Grid>
             </ControlTemplate>
            
            
            <ControlTemplate x:Key="ComboBoxTextBox"
                             TargetType="{x:Type TextBox}">
                <Border x:Name="PART_ContentHost"
                        Focusable="False"
                        Background="{TemplateBinding Background}" />
            </ControlTemplate>
            
            <Style x:Key="ComboBoxStyle" TargetType="{x:Type ComboBox}">
                <Setter Property="Width" Value="{Binding ActualWidth, 
                RelativeSource={RelativeSource FindAncestor, AncestorType=DataGridCell}}"></Setter>
                <Setter Property="Cursor" Value="Hand"></Setter>
                <Setter Property="FontFamily" Value="Roboto"></Setter>
                <Setter Property="FontSize" Value="12"></Setter>
                <Setter Property="Foreground" Value="#3A3A3A"></Setter>
                <Setter Property="HorizontalAlignment" Value="Center"></Setter>
                <Setter Property="Template">
                 <Setter.Value>
                     <ControlTemplate TargetType="{x:Type ComboBox}">
                         <Grid>
                             <ToggleButton x:Name="ToggleButton"
                                           Focusable="False"
                                           ClickMode="Press"
                                           IsChecked="{Binding IsDropDownOpen,
                                        Mode=TwoWay,
                                        RelativeSource={RelativeSource TemplatedParent}}"
                                           Template="{StaticResource ComboBoxCustomToggleButton}"/>
                             <ContentPresenter Name="ContentSite"
                                               IsHitTestVisible="False"
                                               Content="{TemplateBinding SelectionBoxItem}"
                                               ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                               ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                               VerticalAlignment="Center"
                                               Margin="5,0,0,0"
                                               HorizontalAlignment="Left"
                                               IsEnabled="True">
                                 <ContentPresenter.MaxWidth>
                                     <MultiBinding Converter="{converters:ArithmeticConverter}"
                                                   ConverterParameter="{x:Static converters:ArithmeticConverter+Operators.Minus}">
                                         <Binding Path="ActualWidth"
                                                  RelativeSource="{RelativeSource FindAncestor, AncestorType=DataGridCell}"
                                                  Mode="OneWay"/>
                                         <Binding>
                                             <Binding.Source>
                                                 <system:Double>30.0</system:Double>
                                             </Binding.Source>
                                         </Binding>
                                     </MultiBinding>
                                 </ContentPresenter.MaxWidth>
                             </ContentPresenter>
                             <Label  
                                 Name="Watermark"
                                 Content="{TemplateBinding Tag}"
                                 Visibility="Collapsed"
                                 FontFamily="Roboto"
                                 FontSize="12"
                                 HorizontalAlignment="Left"
                                 Foreground="#707070"
                                 Padding="8,0,0,0"
                                 VerticalAlignment="Center"
                                 />
                             <TextBox Name="PART_EditableTextBox"
                                      HorizontalAlignment="Left"
                                      VerticalAlignment="Center"
                                      Focusable="True"
                                      Visibility="Hidden"
                                      Template="{StaticResource ComboBoxTextBox}"
                                      />
                             <Popup x:Name="Popup"
                                    IsOpen="{TemplateBinding IsDropDownOpen}"
                                    AllowsTransparency="True"
                                    Focusable="False"
                                    PopupAnimation="Slide"
                                    Placement="Bottom">
                                 <Grid Name="DropDown" 
                                       Margin="0,5,0,0"
                                       SnapsToDevicePixels="True"
                                       MinWidth="{TemplateBinding ActualWidth}"
                                       MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                     <Border x:Name="DropDownBorder"
                                             Margin="0,5,0,0"
                                             BorderThickness="1"
                                             Background="White"
                                             BorderBrush="LightGray"/>
                                     <ScrollViewer Margin="4 6 4 6 "
                                                   SnapsToDevicePixels="True"
                                                   OverridesDefaultStyle="True"
                                                   Foreground="#3A3A3A"
                                                   FontFamily="Roboto"
                                                   FontSize="12"
                                                   FontWeight="Black"/>
                                     <StackPanel   Margin="0,5,0,0" IsItemsHost="True"
                                                   KeyboardNavigation.DirectionalNavigation="Contained">
                                     </StackPanel>
                                 </Grid>
                             </Popup>
                         </Grid>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Text" Value=""></Condition>
                                </MultiTrigger.Conditions>
                                <Setter Property="Visibility" Value="Visible" TargetName="Watermark"></Setter>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                     </ControlTemplate>
                 </Setter.Value>
             </Setter>
            </Style>
            
            <!-- #endregion -->
            
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid >
       
        <DataGrid
            Style="{StaticResource DataGridStyle}"
            RowStyle="{StaticResource DataGridRowStyle}"
            CellStyle="{StaticResource DataGridCellStyle}"
            ColumnHeaderStyle="{StaticResource DataGridColumnHeaderStyle}"
            
            ItemsSource="{ Binding CompilerCommands, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=viewControls:CompilerCommandMenu}}">
            <DataGrid.Columns>
                <DataGridTextColumn HeaderStyle="{StaticResource LeftDataGridColumnHeaderStyle}"
                                    CellStyle="{StaticResource LeftDataGridCellStyle}"
                                    Header="Operand 1"
                                    Binding="{Binding Operand1}"
                >
                </DataGridTextColumn>
                <DataGridTextColumn Header="Operand 2" Binding="{Binding Operand2}"  />
                <DataGridTextColumn Header="Operand 3" Binding="{Binding Operand3}" />
                <DataGridTemplateColumn Header="Operation" >
                    <DataGridTemplateColumn.CellTemplate >
                        <DataTemplate >
                            <ComboBox Style="{StaticResource ComboBoxStyle}"
                                      Tag="Operation"
                                      SelectedIndex="{Binding Operation}">
                                <ComboBox.Items>
                                    <ComboBoxItem Content="state of all registers" ToolTip="display the state of all registers in the number system, which is written in 1 operand"  />
                                    <ComboBoxItem Content="inversion"  ToolTip="bitwise inversion over the contents of operand 1, the result is stored in operand 3" />
                                    <ComboBoxItem Content="disjunction" ToolTip="disjunction over operands 1 and 2, the result is stored in operand 3"  />
                                    <ComboBoxItem Content="conjunction" ToolTip="conjunction over operands 1 and 2, the result is stored in operand 3" />
                                    <ComboBoxItem Content="addition modulo 2" ToolTip="addition modulo 2 over operands 1 and 2, the result is stored in operand 3" />
                                    <ComboBoxItem Content="implication" ToolTip="implication over operands 1 and 2, the result is stored in operand 3" />
                                    <ComboBoxItem Content="coimplication" ToolTip="coimplication over operands 1 and 2, the result is stored in operand 3" />
                                    <ComboBoxItem Content="equivalence" ToolTip="equivalence over operands 1 and 2, the result is stored in operand 3" />
                                    <ComboBoxItem Content="Pierce arrow" ToolTip="Pierce arrow over operands 1 and 2, the result is stored in operand 3" />
                                    <ComboBoxItem Content="Sheffer stroke" ToolTip="Sheffer stroke over operands 1 and 2, the result is stored in operand 3" />
                                    <ComboBoxItem Content="addition" ToolTip="addition of operands 1 and 2, the result is stored in operand 3" />
                                    <ComboBoxItem Content="subtraction" ToolTip="subtraction of operand 2 from operand 1, the result is stored in operand 3" />
                                    <ComboBoxItem Content="multiplication" ToolTip="multiplication of operands 1 and 2, the result is stored in operand 3" />
                                    <ComboBoxItem Content="integer division" ToolTip="integer division of operand 1 by operand 2, the result is stored in operand 3" />
                                    <ComboBoxItem Content="remainder of division" ToolTip="remainder of division of operand 1 by operand 2, the result is stored in operand 3" />
                                    <ComboBoxItem Content="swap" ToolTip="swap the contents of operands 1 and 2" />
                                    <ComboBoxItem Content="store byte" ToolTip="store in operand 1 the byte from the byte position indicated in operand 2, byte value is in operand 3" />
                                    <ComboBoxItem Content="display in number system" ToolTip="display operand 1 in the number system indicated by operand 2" />
                                    <ComboBoxItem Content="input in number system" ToolTip="input operand 1 in the number system indicated by operand 2 from the keyboard" />
                                    <ComboBoxItem Content="max divisor" ToolTip="find the largest divisor of operand 1, which divides operand 2, the result is stored in operand 3" />
                                    <ComboBoxItem Content="shift left" ToolTip="shift operand 1 left by the number of bits in operand 2, the result is stored in operand 3" />
                                    <ComboBoxItem Content="shift right" ToolTip="shift operand 1 right by the number of bits in operand 2, the result is stored in operand 3" />
                                    <ComboBoxItem Content="circular shift left" ToolTip="circular shift operand 1 left by the number of bits in operand 2, the result is stored in operand 3" />
                                    <ComboBoxItem Content="circular shift right" ToolTip="circular shift operand 1 right by the number of bits in operand 2, the result is stored in operand 3" />
                                    <ComboBoxItem Content="copy value" ToolTip="copy the value from operand 2 to operand 1" />
                                </ComboBox.Items>
                            </ComboBox>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>
        
    </Grid>
</UserControl>